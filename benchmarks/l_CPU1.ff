checksum "l_CPU1.out" 0xdb927dac;

// Low-level flow facts
// placeholders
multicall "_int_maintask" + 0x64 to 0x11ed2e;  // 0x000151e8 () indirect call in "_int_maintask"

// real
multicall "_CallReadFunctions" + 0x16 to "_ReadAllAdcData", "_GetCANData", "_DiscreteInputAcquisition";      // 0x0011f3a2 () indirect call in 0x0011f38c
multicall "_CallWriteFunctions" + 0x16 to "_ReportAllCANMessages", "_ComputeDiscreteOutput";    // 0x0011f37a () indirect call in "_CallWriteFunctions"

// Loop bounds
// placeholders
// Function _WaitOtherCpuData ()
loop "_WaitOtherCpuData" + 0x2 42 ; // 0x11f1b0 ()
// Function _RecoveryCANBusOff ()
loop "_RecoveryCANBusOff" + 0x6 42 ; // 0x11df30 ()
loop "_drv_cpu_ipc_boot_cpu2" + 0x36 42; // (0011b148)
loop "_drv_cpu_ipc_boot_cpu2" + 0x28 42; // (0011b13a)
// loop 0x0011a5da 42;
loop 0x0011f3a6 42 ; // 0x11f3a6 ()
// Function _CallWriteFunctions ()
loop "_CallWriteFunctions" + 0x1a 42 ; // 0x11f37e ()
// Function _drv_cpu_ipc_wait_for_flag ()
loop "_drv_cpu_ipc_wait_for_flag" + 0x8 42 ; // 0x11a5da ()
// Function _drv_cpu_ipc_wait_for_ack ()
loop "_drv_cpu_ipc_wait_for_ack" + 0x8 42 ; // 0x11a5fe ()

loop 0x00015118 42;
loop 0x0011e19e 42;
loop 0x0001526c 42;
loop 0x0011e096 42;
loop 0x00015174 42;
loop 0x0011dec0 42;
loop 0x0011dea8 42;
loop 0x0011b5c8 42;
loop 0x0011b732 42;
loop 0x0011b404 42;
loop 0x0011b452 42;
